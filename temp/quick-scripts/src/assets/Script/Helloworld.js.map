{"version":3,"sources":["assets/Script/Helloworld.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class Helloworld extends cc.Component {\n\n    @property(cc.Sprite)\n    sprite: cc.Sprite = null;\n    @property(cc.Label)\n    label:cc.Label = null;\n    @property(cc.Button)\n    btnChangeColor = null;\n    @property(cc.Button)\n    btnChangeLabel = null;\n    @property(cc.EditBox)\n    textInput = null;\n\n    start () {\n        this.textInput.string = 2;\n    }\n\n    async onClickChangeColor(){\n        this.btnChangeColor.interactable = false;\n        await this.changeColor(\"#D5AB69\");\n        await this.changeColor(\"#369BFF\");\n        await this.changeColor(\"#D5AB69\");\n        await this.changeColor(\"#369BFF\");\n        await this.changeColor(\"#D5AB69\");\n        await this.changeColor(\"#369BFF\");\n        this.btnChangeColor.interactable = true;\n    }\n\n    changeColor(color) {\n       return new Promise(resolve => {\n           this.sprite.node.color = new cc.Color().fromHEX(color);\n           setTimeout(function (){\n               resolve(true);\n           },1000)\n        })\n    }\n\n    async onClickChangeLabel(){\n        let totalTime = parseFloat(this.textInput.string);\n        if(isNaN(totalTime)){\n            return;\n        }\n        this.btnChangeLabel.interactable = false;\n        this.label.node.color = new cc.Color().fromHEX(\"#ffffff\")\n        let t1 = new Date().getTime()\n       // cc.log(\"t1：\"+t1);\n        let targetDateTime = new Date().getTime()+ totalTime*1000;\n        let halfDateTime = new Date().getTime()+ totalTime/2*1000;\n        while (new Date().getTime() < targetDateTime)\n        {\n            await this.changeLabel(totalTime,targetDateTime,halfDateTime);\n        }\n        this.label.string = totalTime.toString();\n        this.btnChangeLabel.interactable = true;\n        let t2 = new Date().getTime()\n       // cc.log(\"t2：\"+t2);\n        cc.log(\"執行時間：\"+(t2-t1)/1000);\n    }\n\n    changeLabel(totalTime,targetDateTime,halfDateTime){\n        return new Promise(resolve => {\n            let now = new Date().getTime();\n            let percent = 1-((targetDateTime-now)/1000/totalTime);\n           // cc.log(percent)\n            this.label.string = (totalTime*percent).toFixed(2);\n            if(now >= halfDateTime)\n            {\n                this.label.node.color = new cc.Color().fromHEX(\"#80FF67\");\n            }\n            setTimeout(function (){\n                resolve(true);\n            },10)\n        })\n    }\n}\n"]}